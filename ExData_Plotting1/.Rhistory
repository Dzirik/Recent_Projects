ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
Energy_sub_metering<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(7,8,9)]
Energy_sub_metering<-as.numeric(as.character(Energy_sub_metering))
View(Energy_sub_metering)
Energy_sub_metering<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(7,8,9)]
View(Energy_sub_metering)
Energy_sub_metering<-as.numeric(as.character(Energy_sub_metering))
Energy_sub_metering<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(7,8,9)]
Energy_sub_metering<-as.numeric(as.character(Energy_sub_metering))
fix(Energy_sub_metering)
Energy_sub_metering<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(7,8,9)]
class(Energy_sub_metering[1,1])
View(Energy_sub_metering)
View(Energy_sub_metering)
View(Energy_sub_metering)
View(Energy_sub_metering)
Energy_sub_metering_1<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",7]
Energy_sub_metering_1<-as.numeric(as.character(Energy_sub_metering_1))
Energy_sub_metering_2<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",8]
Energy_sub_metering_2<-as.numeric(as.character(Energy_sub_metering_2))
Energy_sub_metering_3<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",9]
Energy_sub_metering_3<-as.numeric(as.character(Energy_sub_metering_3))
if (dispDatasetsInRStudio){
View(Energy_sub_metering_1) #displaying dataset in Rstudio
View(Energy_sub_metering_2) #displaying dataset in Rstudio
View(Energy_sub_metering_3) #displaying dataset in Rstudio
View(Date_time) #displaying dataset in Rstudio
}
plot(Energy_sub_metering_1,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Energy_sub_metering)/2,length(Energy_sub_metering)),labels=c("Thu","Fri","Sat"))
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
line(Energy_sub_metering_2,
type="l",
col="blue")
lines(Energy_sub_metering_2,
type="l",
col="blue")
plot(Energy_sub_metering_1,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_2,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
plot(Energy_sub_metering_1,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("toright", legend=c("a","b","c"), col=plot_colors,
pch=21:23, lty=1:3)
legend("topright", legend=c("a","b","c"), col=plot_colors,
pch=21:23, lty=1:3)
legend("topright", legend=c("a","b","c"), col=c(rgb(0,0,0),"red","blue"),
pch=21:23, lty=1:3)
names(data_hpc_raw)
names(data_hpc_raw)[7:9]
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1))
plot(Energy_sub_metering_1,
ylab="Energy sub metering",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1))
plot(Energy_sub_metering_1,
ylab="Energy sub metering",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1))
## saving a plot
dev.copy(png,file="plot1.png", width=480, height=480)
dev.off()
#unfortunalely x-axis labels are not in English but in Czech, so I forced the English titles as follows
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
## saving a plot
dev.copy(png,file="plot1.png", width=480, height=480)
dev.off()
plot(Energy_sub_metering_1,
ylab="Energy sub metering",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1))
## saving a plot
dev.copy(png,file="plot3.png", width=480, height=480)
dev.off()
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
## saving a plot
dev.copy(png,file="plot2.png", width=480, height=480)
dev.off()
?transform
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Voltage<-data_hpc_raw[data_hpc_raw[,5]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Voltage<-as.numeric(as.character(Voltage))
Energy_sub_metering_1<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",7]
Energy_sub_metering_1<-as.numeric(as.character(Energy_sub_metering_1))
Energy_sub_metering_2<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",8]
Energy_sub_metering_2<-as.numeric(as.character(Energy_sub_metering_2))
Energy_sub_metering_3<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",9]
Energy_sub_metering_3<-as.numeric(as.character(Energy_sub_metering_3))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
Global_reactive_power<-data_hpc_raw[data_hpc_raw[,4]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_reactive_power<-as.numeric(as.character(Global_reactive_power))
par(mfrow=c(2,2))
hist(Global_active_power$Global_active_power,
xlab="Global Active Power (kilowatts)",
ylab="Frequency",
main="Global Active Power",
col="red")
hist(Global_active_power,
xlab="Global Active Power (kilowatts)",
ylab="Frequency",
main="Global Active Power",
col="red")
par(mfrow=c(2,2))
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
plot(Voltage,
ylab="Voltage",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Voltage)/2,length(Voltage)),labels=c("Thu","Fri","Sat"))
plot(Energy_sub_metering_1,
ylab="Energy sub metering",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1))
plot(Global_reactive_power,
ylab="Global_reactive_power",
xlab="datetime",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Voltage<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",5]
Voltage<-as.numeric(as.character(Voltage))
Energy_sub_metering_1<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",7]
Energy_sub_metering_1<-as.numeric(as.character(Energy_sub_metering_1))
Energy_sub_metering_2<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",8]
Energy_sub_metering_2<-as.numeric(as.character(Energy_sub_metering_2))
Energy_sub_metering_3<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",9]
Energy_sub_metering_3<-as.numeric(as.character(Energy_sub_metering_3))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
Global_reactive_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",4]
Global_reactive_power<-as.numeric(as.character(Global_reactive_power))
## creating a plot
par(mfrow=c(2,2))
#plot 1
plot(Global_active_power,
ylab="Global Active Power",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
#plot 2
plot(Voltage,
ylab="Voltage",
xlab="datetime",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Voltage)/2,length(Voltage)),labels=c("Thu","Fri","Sat"))
#plot 3
plot(Energy_sub_metering_1,
ylab="Energy sub metering",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
lines(Energy_sub_metering_2,
type="l",
col="red")
lines(Energy_sub_metering_3,
type="l",
col="blue")
axis(1, at=c(1,length(Energy_sub_metering_1)/2,length(Energy_sub_metering_1)),labels=c("Thu","Fri","Sat"))
legend("topright",
legend=names(data_hpc_raw)[7:9],
col=c(rgb(0,0,0),"red","blue"),
lty=c(1,1,1),
bty="n")
#plot 4
plot(Global_reactive_power,
ylab="Global_reactive_power",
xlab="datetime",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
char(`)
library(datasets)
data(airquality)
summary(airquality)
a<-summary(airquality)
a[1,1]
a[7,1]
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lines
?points
?panel.Imline
?panel.lmline
bwplot(yield ~ site, barley, groups = year,
panel = function(x, y, groups, subscripts, ...) {
panel.grid(h = -1, v = 0)
panel.stripplot(x, y, ..., jitter.data = TRUE,
groups = groups, subscripts = subscripts)
panel.superpose(x, y, ..., panel.groups = panel.average,
groups = groups, subscripts = subscripts)
},
auto.key =
list(points = FALSE, lines = TRUE, columns = 2))
histogram( ~ height | voice.part, data = singer, layout = c(2, 4),
type = "density", border = "transparent", col.line = "grey60",
xlab = "Height (inches)",
ylab = "Density Histogram\n with Normal Fit",
panel = function(x, ...) {
panel.histogram(x, ...)
panel.mathdensity(dmath = dnorm,
args = list(mean=mean(x),sd=sd(x)), ...)
} )
?par
?splom
super.sym <- trellis.par.get("superpose.symbol")
splom(~iris[1:4], groups = Species, data = iris,
panel = panel.superpose,
key = list(title = "Three Varieties of Iris",
columns = 3,
points = list(pch = super.sym$pch[1:3],
col = super.sym$col[1:3]),
text = list(c("Setosa", "Versicolor", "Virginica"))))
splom(~iris[1:3]|Species, data = iris,
layout=c(2,2), pscales = 0,
varnames = c("Sepal\nLength", "Sepal\nWidth", "Petal\nLength"),
page = function(...) {
ltext(x = seq(.6, .8, length.out = 4),
y = seq(.9, .6, length.out = 4),
labels = c("Three", "Varieties", "of", "Iris"),
cex = 2)
})
parallelplot(~iris[1:4] | Species, iris)
parallelplot(~iris[1:4], iris, groups = Species,
horizontal.axis = FALSE, scales = list(x = list(rot = 90)))
?trellis.pa.set()
?trellis.pa.set
?trellis.par.set
show.settings()
tp <- trellis.par.get()
unusual <- c("grid.pars", "fontsize", "clip", "axis.components",
"layout.heights", "layout.widths")
for (u in unusual) tp[[u]] <- NULL
names.tp <- lapply(tp, names)
unames <- sort(unique(unlist(names.tp)))
ans <- matrix(0, nrow = length(names.tp), ncol = length(unames))
rownames(ans) <- names(names.tp)
colnames(ans) <- unames
for (i in seq(along = names.tp))
ans[i, ] <- as.numeric(unames %in% names.tp[[i]])
ans <- ans[, order(-colSums(ans))]
ans <- ans[order(rowSums(ans)), ]
ans[ans == 0] <- NA
levelplot(t(ans), colorkey = FALSE,
scales = list(x = list(rot = 90)),
panel = function(x, y, z, ...) {
panel.abline(v = unique(as.numeric(x)),
h = unique(as.numeric(y)),
col = "darkgrey")
panel.xyplot(x, y, pch = 16 * z, ...)
},
xlab = "Graphical parameters",
ylab = "Setting names")
?print.trellis()
install.packages("ggplot2")
install.packages("gcookbook")
library(datasets)
data(airquality)
library(datasets)
data(airquality)
library(datasets)
data(airquality)
library(datasets)
data(airquality)
qplot(Wing,Ozone,data=airquality,facets =.~factor(Month))
library(ggplot2)
qplot(Wing,Ozone,data=airquality,facets =.~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
?aes
aes(votes,rating)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
setwd("C:/Users/Jiri/Desktop/ExData_Plotting1")
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
if (dispDatasetsInRStudio){
View(Global_active_power) #displaying dataset in Rstudio
View(Date_time) #displaying dataset in Rstudio
}
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data_hpc_raw <- read.csv(unz(temp, "household_power_consumption.txt"), sep=";")
unlink(temp)
if (dispDatasetsInRStudio){
View(data_hpc_raw) #displaying dataset in Rstudio
}
## creating a variable from the dates 2007-02-01 and 2007-02-02
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
if (dispDatasetsInRStudio){
View(Global_active_power) #displaying dataset in Rstudio
View(Date_time) #displaying dataset in Rstudio
}
## creating a plot
plot(Date_time,
Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1,labels(Date_time))
weekdays(Date_time[1])
sys
?sys
?Sys
names(Sys.setlocate)
names(Sys.setlocale)
Sys.setlocale("LC_TIME", "C") #http://stackoverflow.com/questions/8145886/change-time-locale-for-r
dt <- strptime(paste(data_hpc_raw$Date, data_hpc_raw$Time), "%d/%m/%Y %H:%M:%S")
plot(dt,data_hpc_raw$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
plot(dt,Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
plot(Date_time,Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
r <- as.POSIXct(round(range(Date_time), "days"))
axis.POSIXct(1, at=seq(r[1],r[2], by="day"), format="%a")
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
Sys.setlocale("LC_TIME", "C") #http://stackoverflow.com/questions/8145886/change-time-locale-for-r
dt <- strptime(paste(data_hpc_raw$Date, data_hpc_raw$Time), "%d/%m/%Y %H:%M:%S")
plot(Date_time,Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
r <- as.POSIXct(round(range(Date_time), "days"))
axis.POSIXct(1, at=seq(r[1],r[2], by="day"), format="%a")
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
Sys.setlocale("LC_TIME", "C") #http://stackoverflow.com/questions/8145886/change-time-locale-for-r
dt <- strptime(paste(data_hpc_raw$Date, data_hpc_raw$Time), "%d/%m/%Y %H:%M:%S")
plot(Date_time,Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
r <- as.POSIXct(round(range(Date_time), "days"))
axis.POSIXct(1, at=seq(r[1],r[2], by="day"), format="%a")
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
setwd("C:/Users/Jiri/Desktop/ExData_Plotting1")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data_hpc_raw <- read.csv(unz(temp, "household_power_consumption.txt"), sep=";")
unlink(temp)
Global_active_power<-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",3]
Global_active_power<-as.numeric(as.character(Global_active_power))
Date_time <-data_hpc_raw[data_hpc_raw[,1]=="1/2/2007" | data_hpc_raw[,1]=="2/2/2007",c(1,2)]
Date_time <- strptime(paste(Date_time$Date,Date_time$Time),
format="%d/%m/%Y %H:%M:%S")
Sys.setlocale("LC_TIME", "C") #http://stackoverflow.com/questions/8145886/change-time-locale-for-r
dt <- strptime(paste(data_hpc_raw$Date, data_hpc_raw$Time), "%d/%m/%Y %H:%M:%S")
plot(Date_time,Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)", xaxt="n")
r <- as.POSIXct(round(range(Date_time), "days"))
axis.POSIXct(1, at=seq(r[1],r[2], by="day"), format="%a")
plot(Global_active_power,
ylab="Global Active Power (kilowatts)",
xlab="",
type="l",
col=rgb(0,0,0),
xaxt="n")
axis(1, at=c(1,length(Global_active_power)/2,length(Global_active_power)),labels=c("Thu","Fri","Sat"))
source('~/.active-rstudio-document', echo=TRUE)
